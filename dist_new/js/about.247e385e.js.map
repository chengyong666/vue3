{"version":3,"file":"js/about.247e385e.js","mappings":"yLAMA,GAA4B,QAAiB,CAC3CA,OAAQ,YACRC,MAAA,SAAMC,GAER,IAAIC,EAAa,GACbC,GAAW,QAAI,CACjB,CACEC,GAAI,EACJC,MAAO,OACPC,SAAU,CACR,CACEF,GAAI,EACJC,MAAO,SACPC,SAAU,CACR,CACEF,GAAI,EACJC,MAAO,WACPC,SAAU,CACR,CACEF,GAAI,GACJC,MAAO,cAIb,CACED,GAAI,GACJC,MAAO,YAET,CACED,GAAI,GACJC,MAAO,gBAMjB,CACED,GAAI,EACJC,MAAO,OACPC,SAAU,CACR,CACEF,GAAI,EACJC,MAAO,UAET,CACED,GAAI,EACJC,MAAO,YAIb,CACED,GAAI,EACJC,MAAO,OACPC,SAAU,CACR,CACEF,GAAI,EACJC,MAAO,UAET,CACED,GAAI,EACJC,MAAO,cAcTE,GAAU,UAQVC,EAAY,SAACC,EAAWC,GAC5BC,QAAQC,IAAI,KAEZC,EAAiBH,GAEjBI,EAAkBJ,GAElBR,EAAMK,EAAQQ,MAAOC,kBACrB,IAAIC,EAAO,GACXf,EAAIgB,SAAQ,SAACC,GACXF,EAAKG,KAAKD,EAAKf,GACjB,GAEF,EACMS,EAAmB,SAACH,GACxBC,QAAQC,IAAIF,EAAKW,QAASX,EAAKY,YAC/B,IAAIC,EAAMb,EAAKY,WAAWE,OAC1B,GAAID,EAAM,EACR,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAKE,IAClBf,EAAKW,QAGRX,EAAKY,WAAWG,GAAGJ,SAAU,EAF7BX,EAAKY,WAAWG,GAAGJ,SAAU,EAI/BR,EAAiBH,EAAKY,WAAWG,GAGvC,EACMX,EAAoB,SAACJ,GACzB,GAAIA,EAAKgB,OACP,IAAK,IAAIC,KAAOjB,EACH,UAAPiB,IACFjB,EAAKiB,GAAKN,SAAU,EACpBP,EAAkBJ,EAAKiB,IAI/B,EAkFA,OAAO,SAACC,EAAUC,GAChB,OAAQ,WAAc,SAAa,QAAO,KAAS,CACjDpB,MAAM,QAAON,GACb,gBAAiB,GACjB,WAAY,KACZ2B,QAAS,UACTC,IAAKxB,EACL,sBAAuB,GACvB,sBAAsB,EACtB,kBAAkB,EAClB,wBAAwB,EACxByB,YAAaxB,GACZ,KAAM,EAAG,CAAC,QACf,CACA,ICxNA,MAAMyB,EAAc,EAEpB,O","sources":["webpack://vue3.0/./src/views/AboutView.vue?9f41","webpack://vue3.0/./src/views/AboutView.vue"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { ref, computed, onMounted } from \"vue\";\nimport { ElTree } from \"element-plus\";\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'AboutView',\n  setup(__props) {\n\nlet arr: any[] = [];\nlet treeData = ref([\n  {\n    id: 1,\n    label: \"一级 1\",\n    children: [\n      {\n        id: 4,\n        label: \"二级 1-1\",\n        children: [\n          {\n            id: 9,\n            label: \"三级 1-1-1\",\n            children: [\n              {\n                id: 11,\n                label: \"四级 1-1-1\",\n              },\n            ],\n          },\n          {\n            id: 10,\n            label: \"三级 1-1-2\",\n          },\n          {\n            id: 12,\n            label: \"三级 1-1-3\",\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: 2,\n    label: \"一级 2\",\n    children: [\n      {\n        id: 5,\n        label: \"二级 2-1\",\n      },\n      {\n        id: 6,\n        label: \"二级 2-2\",\n      },\n    ],\n  },\n  {\n    id: 3,\n    label: \"一级 3\",\n    children: [\n      {\n        id: 7,\n        label: \"二级 3-1\",\n      },\n      {\n        id: 8,\n        label: \"二级 3-2\",\n      },\n    ],\n  },\n]);\n\n// export default {\n// setup() {\n// interface Tree {\n//   id: number;\n//   label: string;\n//   children?: Tree[];\n// }\n\nconst treeRef = ref<InstanceType<typeof ElTree>>();\n\n// const getCheckedNodes = () => {\n//   console.log(treeRef.value!.getCheckedNodes(false, false));\n// };\n// const getCheckedKeys = () => {\n//   console.log(treeRef.value!.getCheckedKeys(false));\n// };\nconst nodeClick = (data: any, node: any) => {\n  console.log(111);\n  //这个方法是勾选父级子级也默认勾选 取消子级不影响父级\n  childNodesChange(node);\n  // 这个方法是勾选子级默认把父级也勾选上\n  parentNodesChange(node);\n  // this.$refs.Tree.getCheckedNodes() 这个方法是官网自带的 若节点可被选择（即    show-checkbox 为 true），则返回目前被选中的节点所组成的数组\n  arr = treeRef.value!.getCheckedNodes();\n  let list = [];\n  arr.forEach((item) => {\n    list.push(item.id);\n  });\n  // console.log(SelectMenulist, \"这是需要传给后端勾选的数据id\");\n};\nconst childNodesChange = (node: any) => {\n  console.log(node.checked, node.childNodes);\n  let len = node.childNodes.length;\n  if (len > 0) {\n    for (let i = 0; i < len; i++) {\n      if (!node.checked) {\n        node.childNodes[i].checked = false;\n      } else {\n        node.childNodes[i].checked = true;\n      }\n      childNodesChange(node.childNodes[i]);\n    }\n  }\n};\nconst parentNodesChange = (node: any) => {\n  if (node.parent) {\n    for (let key in node) {\n      if (key == \"parent\") {\n        node[key].checked = true;\n        parentNodesChange(node[key]);\n      }\n    }\n  }\n};\n\n// const setCheckedNodes = () => {\n//   treeRef.value!.setCheckedNodes(\n//     [\n//       {\n//         id: 5,\n//         label: \"Level two 2-1\",\n//       },\n//       {\n//         id: 9,\n//         label: \"Level three 1-1-1\",\n//       },\n//     ] as Node[],\n//     false\n//   );\n// };\n// const setCheckedKeys = () => {\n//   treeRef.value!.setCheckedKeys([3], false);\n// };\n// const resetChecked = () => {\n//   treeRef.value!.setCheckedKeys([], false);\n// };\n// const defaultProps = {\n//   children: \"children\",\n//   label: \"label\",\n// };\n\n// const data: Tree[] = [\n//   {\n//     id: 1,\n//     label: \"Level one 1\",\n//     children: [\n//       {\n//         id: 4,\n//         label: \"Level two 1-1\",\n//         children: [\n//           {\n//             id: 9,\n//             label: \"Level three 1-1-1\",\n//           },\n//           {\n//             id: 10,\n//             label: \"Level three 1-1-2\",\n//           },\n//         ],\n//       },\n//     ],\n//   },\n//   {\n//     id: 2,\n//     label: \"Level one 2\",\n//     children: [\n//       {\n//         id: 5,\n//         label: \"Level two 2-1\",\n//       },\n//       {\n//         id: 6,\n//         label: \"Level two 2-2\",\n//       },\n//     ],\n//   },\n//   {\n//     id: 3,\n//     label: \"Level one 3\",\n//     children: [\n//       {\n//         id: 7,\n//         label: \"Level two 3-1\",\n//       },\n//       {\n//         id: 8,\n//         label: \"Level two 3-2\",\n//       },\n//     ],\n//   },\n// ];\n//   return {};\n// },\n// };\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_unref(ElTree), {\n    data: _unref(treeData),\n    \"show-checkbox\": \"\",\n    \"node-key\": \"id\",\n    ref_key: \"treeRef\",\n    ref: treeRef,\n    \"check-on-click-node\": \"\",\n    \"default-expand-all\": true,\n    \"check-strictly\": true,\n    \"expand-on-click-node\": false,\n    onNodeClick: nodeClick\n  }, null, 8, [\"data\"]))\n}\n}\n\n})","import script from \"./AboutView.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./AboutView.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./AboutView.vue?vue&type=style&index=0&id=1adbeca6&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["__name","setup","__props","arr","treeData","id","label","children","treeRef","nodeClick","data","node","console","log","childNodesChange","parentNodesChange","value","getCheckedNodes","list","forEach","item","push","checked","childNodes","len","length","i","parent","key","_ctx","_cache","ref_key","ref","onNodeClick","__exports__"],"sourceRoot":""}